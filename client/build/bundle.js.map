{"version":3,"sources":["webpack:///webpack/bootstrap 0d52c6fdeffe96abc024","webpack:///./src/app.js","webpack:///./src/models/flightsearch.js","webpack:///./src/models/flightquote.js","webpack:///./src/models/hotelsearch.js","webpack:///./src/models/hotelquote.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACdA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA,+B;;;;;;ACtGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;ACnBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;;;;;;;;AChCA;AACA;AACA;AACA,kBAAiB,sDAAsD;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 0d52c6fdeffe96abc024\n **/","var FlightSearch = require('./models/flightsearch.js');\nvar HotelSearch = require('./models/hotelsearch.js');\n\nvar state = {\n  skyscannerApiKey: 'co301553792687403420764331127549',\n  expediaApiKey: '49anVGknDW2Ck8ATFBRAAMQ0Ls75wphH',\n  resultQuotes: [],\n}\n\nwindow.onload = function(){\n  var flightSearch = new FlightSearch()\n  flightSearch.getFlightData(state.skyscannerApiKey);\n  var hotelSearch = new HotelSearch()\n  hotelSearch.getHotelData(state.expediaApiKey)\n}\n\n\n\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app.js\n ** module id = 0\n ** module chunks = 0\n **/","var FlightQuote = require('./flightquote.js');\n\nvar FlightSearch = function(data){\n  this.quotes = [];\n}\n\nFlightSearch.prototype = {\n  getFlightData: function(apiKey){\n    console.log('attemping api')\n    var url = 'http://partners.api.skyscanner.net/apiservices/browsequotes/v1.0/GB/GBP/en-GB/LON/everywhere/2016-10-01/2016-10-14?apiKey=' + apiKey;\n    var request = new XMLHttpRequest();\n    request.open('GET', url);\n    request.onload = function(){\n      if(request.status === 200){\n        var jsonString = request.responseText;\n        var flightData = JSON.parse(jsonString);\n        console.log(flightData);\n        var newFlightData = this.replaceCodes(flightData);\n        this.populateQuotes(newFlightData);\n        console.log(this)\n      }\n    }.bind(this)\n    request.send(null);\n  },\n  replaceOriginCityCode: function(flightData){\n    var quotes = flightData.Quotes;\n    var cities = flightData.Places;\n\n    quotes.forEach(function(quote){\n\n      cities.forEach(function(city){\n\n        if(quote.OutboundLeg.OriginId === city.PlaceId){\n          quote.OutboundLeg.OriginId = city.CityName;\n          quote.InboundLeg.DestinationId = city.CityName;\n          quote.OutboundAirportName = city.Name;\n        }\n      })\n    })\n    return flightData;\n  },\n  replaceDestinationCityCode: function(flightData){\n    var quotes = flightData.Quotes;\n    var cities = flightData.Places;\n\n    quotes.forEach(function(quote){\n\n      cities.forEach(function(city){\n\n        if(quote.OutboundLeg.DestinationId === city.PlaceId){\n          quote.OutboundLeg.DestinationId = city.CityName;\n          quote.InboundLeg.OriginId = city.CityName;\n          quote.InboundAirportName = city.Name;\n        }\n      })\n    })\n    return flightData;\n  },\n  replaceOutboundCarrierCode: function(flightData){\n    var quotes = flightData.Quotes;\n    var carriers = flightData.Carriers;\n\n    quotes.forEach(function(quote){\n\n      carriers.forEach(function(carrier){\n\n        if(quote.OutboundLeg.CarrierIds[0] === carrier.CarrierId){\n          quote.OutboundLeg.CarrierIds[0] = carrier.Name;\n        }\n      })\n    })\n    return flightData;\n  },\n  replaceInboundCarrierCode: function(flightData){\n    var quotes = flightData.Quotes;\n    var carriers = flightData.Carriers;\n\n    quotes.forEach(function(quote){\n\n      carriers.forEach(function(carrier){\n\n        if(quote.InboundLeg.CarrierIds[0] === carrier.CarrierId){\n          quote.InboundLeg.CarrierIds[0] = carrier.Name;\n        }\n      })\n    })\n    return flightData;\n  },\n  replaceCodes: function(flightData){\n    var flightData = this.replaceOriginCityCode(flightData);\n    flightData = this.replaceDestinationCityCode(flightData);\n    flightData = this.replaceOutboundCarrierCode(flightData);\n    flightData = this.replaceInboundCarrierCode(flightData);\n    return flightData;\n  },\n  populateQuotes: function(flightData){\n    flightData.Quotes.forEach(function(flight){\n      this.quotes.push(new FlightQuote(flight))\n    }.bind(this))\n  }\n}\n\nmodule.exports = FlightSearch;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/flightsearch.js\n ** module id = 3\n ** module chunks = 0\n **/","var FlightQuote = function(quoteQbject){\n  this.originCity = quoteQbject.OutboundLeg.OriginId,\n  this.destinationCity = quoteQbject.OutboundLeg.DestinationId,\n  this.outboundDate = this.fixdate(quoteQbject.OutboundLeg.DepartureDate),\n  this.inboundDate = this.fixdate(quoteQbject.InboundLeg.DepartureDate),\n  this.price = quoteQbject.MinPrice,\n  this.outboundCarrier = quoteQbject.OutboundLeg.CarrierIds[0],\n  this.inboundCarrier = quoteQbject.InboundLeg.CarrierIds[0]\n  this.inboundAirport = quoteQbject.InboundAirportName\n  this.outboundAirport = quoteQbject.OutboundAirportName\n}\n\nFlightQuote.prototype = {\n  fixdate: function(date){\n    dateArray = date.split('T')\n    return dateArray[0]\n  }\n}\n\nmodule.exports = FlightQuote;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/flightquote.js\n ** module id = 4\n ** module chunks = 0\n **/","var HotelQuote = require('./hotelquote.js');\n\nvar HotelSearch = function(data){\n  this.quotes = []\n}\n\nHotelSearch.prototype = {\n  getHotelData: function(apiKey){\n    console.log('attemping hotel api')\n    var url = 'http://terminal2.expedia.com/x/mhotels/search?city=EDINBURGH&checkInDate=2016-12-15&checkOutDate=2016-12-20&room1=9&apikey=' + apiKey;\n    var request = new XMLHttpRequest();\n    request.open('GET', url);\n    request.onload = function(){\n      if(request.status === 200){\n        var jsonString = request.responseText;\n        var hotelData = JSON.parse(jsonString);\n        this.populateQuotes(hotelData);\n        console.log(this)\n      }\n    }.bind(this)\n    request.send(null);\n  },\n  populateQuotes: function(hotelData){\n    hotelData.hotelList.forEach(function(hotel){\n      if(hotel.isHotelAvailable){\n        this.quotes.push(new HotelQuote(hotel))\n      }\n    }.bind(this))\n  }\n\n}\n\nmodule.exports = HotelSearch;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/hotelsearch.js\n ** module id = 5\n ** module chunks = 0\n **/","var HotelQuote = function(quoteObject){\n  this.hotelName = quoteObject.name,\n  this.hotelAddress = quoteObject.address + \", \" + quoteObject.city + \", \" + quoteObject.stateProvinceCode + \", \" + quoteObject.postalCode\n  this.latLng = {lat: quoteObject.latitude, lng: quoteObject.longitude},\n  this.thumbnailUrl = quoteObject.largeThumbnailUrl,\n  this.description = quoteObject.shortDescription,\n  this.locationDescription = quoteObject.locationDescription,\n  this.starRating = quoteObject.hotelStarRating,\n  this.guestRating = quoteObject.hotelGuestRating,\n  this.percentRecommended = quoteObject.percentRecommended,\n  this.nightlyPrice = quoteObject.lowRateInfo.total,\n  this.country = quoteObject.countryCode\n}\n\nHotelQuote.prototype = {\n\n}\n\nmodule.exports = HotelQuote;\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/models/hotelquote.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}